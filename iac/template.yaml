---
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  CloudFormation para POC de AWS Developers Tools.
  
Parameters:

###################### TAGS #######################################
  S3BucketName:
    Description: Nombre del bucket S3.
    Type: String
    AllowedPattern: '[a-zA-Z0-9].+'
    MinLength: '1'
    MaxLength: '2048'
    Default: code

  Project:
    Description: Nombre del proyecto.
    Type: String
    AllowedPattern: '[a-zA-Z0-9].+'
    MinLength: '1'
    MaxLength: '2048'
    Default: timeoff-mgmt-app
  
  Environment:
    Description: Ambiente donde se despliega.
    Type: String
    AllowedPattern: '[a-zA-Z0-9].+'
    MinLength: '1'
    MaxLength: '2048'
    Default: dev

  GitUrl:
    Description: URL for git pull
    Type: String
    Default: https://github.com/joemaster9/timeoff-management-application

Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
        - "-"
        - - Ref: Project
          - Ref: S3BucketName
          - Ref: Environment
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        IgnorePublicAcls: True
        BlockPublicPolicy: True
        RestrictPublicBuckets: True
   
  S3PublicBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3Bucket
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Sid: AddPerm
            Effect: Allow
            Principal:
               AWS: !GetAtt "CodeBuildIAMRole.Arn"
            Action: 
              - s3:GetObject*
              - s3:PutObject*
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'S3Bucket', /*]]

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      TimeoutInMinutes: 60
      Artifacts: 
        Type: S3
        EncryptionDisabled: false
        Location: !Ref S3Bucket
        NamespaceType: BUILD_ID
        Packaging: ZIP
      Cache: 
        Type: NO_CACHE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: AWS_DEFAULT_REGION
          Value: !Ref AWS::Region
        - Name: AWS_ACCOUNT_ID
          Value: !Ref AWS::AccountId
        - Name: IMAGE_REPO_NAME
          Value: !Ref ECRRepository
        - Name: IMAGE_TAG
          Value: latest
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt CodeBuildIAMRole.Arn
      Name: Timeoff-mgmt-app-CodeBuild
      Source:
        Type: GITHUB
        Location: !Ref GitUrl
        GitCloneDepth: 1
        GitSubmodulesConfig: 
          FetchSubmodules: false
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
              ExcludeMatchedPattern: false
            # - Type: ACTOR_ACCOUNT_ID
            #   Pattern: 12345
              ExcludeMatchedPattern: true
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*
            - Type: FILE_PATH
              Pattern: template,buildspec
              ExcludeMatchedPattern: true

  CodeBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: codebuild-TimeoffMGMTApp-service-role
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: Manage_CodeBuild_Logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Resource:
              - !Sub arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/Timeoff-mgmt-app-CodeBuild
              - !Sub arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/Timeoff-mgmt-app-CodeBuild:*
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            - Effect: Allow
              Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
              Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            - Effect: Allow
              Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
              Resource:
              - !Sub arn:aws:codebuild:us-east-1:${AWS::AccountId}:report-group/Timeoff-mgmt-app-CodeBuild-*
            - Effect: Allow
              Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:GetAuthorizationToken
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
              Resource: 
               - !GetAtt ECRRepository.Arn

  ECRRepository: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: timeoff-mgmt-app-repo
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              Service: codebuild.amazonaws.com
            Action: 
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:GetAuthorizationToken"
            
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: timeoff-mgmt-app-cluster
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1





  # CodePipelineRole:
  #   Type: 'AWS::IAM::Role'
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: 2012-10-17
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: codepipeline.amazonaws.com
  #           Action: 'sts:AssumeRole'
  #     Path: /
  #     Policies:
  #       - PolicyName: Manage_CodePipeline
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #       - Effect: Allow
  #         Action:
  #           - 's3:GetObject'
  #           - 's3:GetObjectVersion'
  #           - 's3:GetBucketVersioning'
  #           - 's3:PutObject'
  #           - "s3:GetBucketAcl"
  #           - "s3:GetBucketLocation"
  #         Resource:
  #           - !GetAtt S3Bucket.Arn
  #           - !Sub "${S3Bucket.Arn}/*"
  #         Effect: Allow
  #       - Action:
  #           - 'iam:PassRole'
  #         Resource: '*'
  #         Effect: Allow
  #       - Action:
  #           - 'codebuild:BatchGetBuilds'
  #           - 'codebuild:StartBuild'
  #         Resource: '*'
  #         Effect: Allow
  #       - Action:
  #         - 'kms:Encrypt'
  #         - 'kms:Decrypt'
  #         - 'kms:ReEncrypt*'
  #         - 'kms:GenerateDataKey*'
  #         - 'kms:DescribeKey'
  #         Resource: !GetAtt KMSKey.Arn
  #         Effect: Allow
  #       - Action:
  #           - 'secretsmanager:GetSecretValue'
  #         Resource: !Ref SecretsManagerArnForSSHPrivateKey
  #         Effect: Allow
  #       Version: 2012-10-17

  # CodePipeline:
  #   Type: 'AWS::CodePipeline::Pipeline'
  #   Properties:
  #     ArtifactStore:
  #       Type: S3
  #       Location: !Ref S3Bucket
  #       EncryptionKey:
  #         Id: !GetAtt KMSKey.Arn
  #         Type: KMS
  #     Name: !Ref CodePipelineName
  #     RoleArn: !GetAtt PipelineRole.Arn
  #     Stages:
  #       - Name: 'Source'
  #         Actions:
  #           - Name: 'Source'
  #             ActionTypeId:
  #               Category: 'Source'
  #               Owner: 'Custom'
  #               Version: !Ref SourceActionVersion
  #               Provider: !Ref SourceActionProvider
  #             OutputArtifacts:
  #               - Name: MyApp
  #             Configuration:
  #               Branch: !Ref Branch
  #               GitUrl: !Ref GitUrl
  #               PipelineName: !Ref CodePipelineName
  #               SSHSecretKeyName: !Ref SecretsManagerArnForSSHPrivateKey
  #             RunOrder: 1
  #       - Name: 'Build'
  #         Actions:
  #           - Name: 'CodeBuild'
  #             ActionTypeId:
  #               Category: 'Build'
  #               Owner: 'AWS'
  #               Version: '1'
  #               Provider: 'CodeBuild'
  #             InputArtifacts:
  #               - Name: MyApp
  #             OutputArtifacts:
  #               - Name: MyAppBuilt
  #             Configuration:
  #               ProjectName: !Ref CodeBuild
  #             RunOrder: 1

  # CodePipelineWebhook:
  #   Type: "AWS::CodePipeline::Webhook"
  #   Properties:
  #     TargetPipeline: !Ref Pipeline
  #     TargetPipelineVersion: 1
  #     TargetAction: Source
  #     Filters:
  #       - JsonPath: '$.ref'
  #         MatchEquals: 'refs/heads/{Branch}'
  #     Authentication: IP
  #     AuthenticationConfiguration:
  #       AllowedIPRange: !Ref GitWebHookIpAddress
  #     RegisterWithThirdParty: false
